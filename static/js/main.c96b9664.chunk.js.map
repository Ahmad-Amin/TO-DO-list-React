{"version":3,"sources":["components/AddItem.js","components/prevItem/prevItem.js","components/prevItem/prevItemGenerator.js","components/utils.js","components/mainSection.js","App.js","reportWebVitals.js","index.js"],"names":["AddItem","props","className","align","type","value","newInput","onChange","input","onClick","clicked","prevItem","date","text","rem","prevItemGenerator","dataToMap","list","map","i","val","getCurrentDate","separator","newDate","Date","getDate","month","getMonth","year","getFullYear","mainSection","state","listitemsData","count","addNewItem","length","prevState","unshift","setState","alert","removeAnItem","keyValue","splice","handleChange","e","target","id","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c96b9664.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nconst AddItem = (props) => {\r\n\r\n    return(\r\n        <Fragment>\r\n            \r\n            <div className=\"AddNewItem\">\r\n                <h3 className=\"listHeading\">Add New Item: </h3>\r\n                <hr className=\"listHr\" align=\"left\"/>\r\n                <input \r\n                    className=\"inputText\" \r\n                    type=\"text\"\r\n                    value={props.newInput} \r\n                    onChange={props.input}/>\r\n\r\n                <button className=\"addButton\" onClick={props.clicked}>Add</button>\r\n                <div className=\"clearFix\"></div>\r\n            </div>\r\n        </Fragment>\r\n    \r\n    );\r\n}\r\n\r\nexport default AddItem;","import React,{Fragment} from 'react'\r\n\r\nconst prevItem = (props) => {\r\n    return(\r\n        <Fragment>\r\n            <div className=\"item\">\r\n                <div className=\"dateDiv\">{props.date}</div>\r\n                <p>{props.text}</p>\r\n                <button \r\n                    className=\"removeButton\"\r\n                    onClick={props.rem}>Remove</button>                        \r\n                <div className=\"clearFix\"></div>\r\n                <hr/>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default prevItem\r\n","import React,{Fragment} from 'react'\r\nimport PrevItem from './prevItem'\r\n\r\nconst prevItemGenerator = (props) => {\r\n\r\n    var dataToMap = props.list.map((i,val)=>{\r\n        return (\r\n                <PrevItem \r\n                    date={i.date}\r\n                    text={i.text}\r\n                    key={val}\r\n                    rem = {()=>props.rem(val)}>\r\n                </PrevItem>\r\n            );\r\n    })\r\n\r\n    return(\r\n        <Fragment>\r\n            {dataToMap}\r\n        </Fragment>\r\n        \r\n    );\r\n}\r\n\r\nexport default prevItemGenerator;","export function getCurrentDate(separator='/'){\r\n\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n    \r\n    return `${date<10?`0${date}`:`${date}`}${separator}${month<10?`0${month}`:`${month}`}${separator}${year}`\r\n    }","\r\nimport React,{Component, Fragment} from 'react'\r\nimport AddItem from '../components/AddItem'\r\nimport PrevItemGenerator from './prevItem/prevItemGenerator';\r\nimport {getCurrentDate} from '../components/utils';\r\n\r\nclass mainSection extends Component{\r\n\r\n    state = {\r\n        listitemsData:[\r\n            {date:'12/01/2010', text: 'kjsdhflkjsdhfkldjshfal skjhdfkjhalskj'},\r\n            {date:'11/05/2021', text: 'sdhf gakjsegfg fqwiufgiwufidgaoig feiuw '},\r\n            {date:'02/03/2020', text: 'shdjafg jhgfueygafuiwegfdsn vx aweigfwe'},\r\n            {date:'28/06/2013', text: 'kasjdhflksdjhflalj asddhaskjhfkasljdhf'},\r\n        ],\r\n        newInput: \"\",\r\n        count : 4\r\n    }\r\n\r\n    addNewItem = () => {\r\n\r\n        if(this.state.newInput.length === 0){\r\n            alert('Cannot Add Empty List!!');\r\n            return;\r\n        }\r\n        const date = getCurrentDate();\r\n        let prevState = [\r\n            ...this.state.listitemsData\r\n        ];\r\n        prevState.unshift({date:date, text: this.state.newInput});\r\n        let count = prevState.length;\r\n        this.setState({\r\n            listitemsData:prevState,\r\n            count:count,\r\n            newInput:\"\"\r\n        });\r\n    }\r\n\r\n    removeAnItem = (keyValue) =>{\r\n\r\n        const val = [\r\n            ...this.state.listitemsData\r\n        ];\r\n\r\n        // console.log(val[keyValue]);\r\n        val.splice(keyValue,1);\r\n        // console.log(val[keyValue]);\r\n\r\n        this.setState({\r\n            listitemsData:val,\r\n            count:this.state.count-1\r\n        });\r\n        \r\n    }\r\n\r\n    handleChange = e =>{\r\n        this.setState({\r\n            newInput: e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <section id=\"mainDiv\">\r\n                    <div className=\"toDoMainDiv\">\r\n                        <div className=\"HeadingDiv\">\r\n                            <h1>TO-DO LIST</h1>\r\n                            <hr/>\r\n                        </div>\r\n\r\n                        <AddItem\r\n                            input = {this.handleChange}\r\n                            clicked = {this.addNewItem}\r\n                            newInput = {this.state.newInput}\r\n                        >\r\n                        </AddItem>\r\n\r\n                        <p className=\"totalnotes\"> Total Notes: <strong>{this.state.count}</strong></p>\r\n\r\n                        <div className=\"previousList\">\r\n                            <h3 className=\"listHeading\">Previous Items: </h3>\r\n                            <hr className=\"listHr\" align=\"left\"/>\r\n                            <div className=\"listItems\">\r\n                                \r\n                                <PrevItemGenerator \r\n                                    list = {this.state.listitemsData}\r\n                                    rem = {this.removeAnItem}\r\n                                >\r\n                                </PrevItemGenerator>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"designedDiv\">\r\n                            <p>Designed and Developed by <strong>Ahmad Amin</strong></p>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </section>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default mainSection;","import './App.css';\nimport MainSection from './components/mainSection'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainSection></MainSection>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}